#~Mount Media Drive
sudo apt-get install cifs-utils
vi /etc/fstab # Update fstab
sudo mount -a 

#~Install Sensors
sudo apt install lm-sensors

#~Install shell2http
sudo snap install shell2http

#~Install ftp
sudo apt install vsftpd
vi /etc/vsftpd.conf # Update ftp config

#~Install samba
sudo apt install samba
vi /etc/samba/smb.conf # Update samba config

#~Install docker
sudo apt install docker

#~Setup directory structure
mkdir -p '/server'
mkdir -p '/root'
mkdir -p '/home/bazarr'
mkdir -p '/home/compression'
mkdir -p '/home/docker'
mkdir -p '/home/jackett'
mkdir -p '/home/lidarr'
mkdir -p '/home/nzbget'
mkdir -p '/home/ombi'
mkdir -p '/home/plex'
mkdir -p '/home/radarr'
mkdir -p '/home/samba'
mkdir -p '/home/sonarr'
mkdir -p '/home/transmission'
mkdir -p '/home/vpn'
mkdir -p '/home/vsftpd'
mkdir -p '/home/public/Videos/TV/Plex'
mkdir -p '/home/public/Videos/TV/Sonarr'
mkdir -p '/home/public/Videos/TV/To Import'
mkdir -p '/home/public/Videos/Movies/Plex'
mkdir -p '/home/public/Videos/Movies/Radarr'
mkdir -p '/home/public/Videos/Movies/To Import'
mkdir -p '/home/public/Videos/Other/Plays'
mkdir -p '/home/public/Videos/Other/Music Videos'
mkdir -p '/home/public/Videos/Other/Uncategorized'
mkdir -p '/home/public/Videos/Other/To Import'
mkdir -p '/home/public/Music/Lidarr'
mkdir -p '/home/public/Music/Plex'
mkdir -p '/home/public/Music/Picard'
mkdir -p '/home/public/Music/Unprocessed'
mkdir -p '/home/public/Music/To Import'
mkdir -p '/home/public/Downloads'
mkdir -p '/home/public/Games/To Import'
mkdir -p '/home/public/Pictures/To Import'
mkdir -p '/home/public/Upload'

#~Prepare the files
#Move files from git to their appropriate locations
chown root:root -R /server
chmod 755 -R /server
chown root:root -R /root
chmod 700 -R /root

#~Add Compression cron jobs
sudo crontab -u compression -e
# 0 2 * * * /home/compression/compression.sh start --speed ultrafast --video libx264 -- --thread 1 --sort name --delete-input --delete-metadata
# 0 2 * * 1,5 /home/compression/compression.sh start --speed fast --video libx265 -- --thread 3 --sort date --delete-input --delete-metadata
# 0 2 1,15 * * /home/compression/compression.sh start --speed slow --video libx265 -- --thread 2 --sort reverse-date --delete-input --delete-metadata

#~Add Permission cron job
sudo crontab -u root -e
# 0 * * * * /root/permissions.sh
# 0 0 * * 1 systemctl restart transmission

#~Setup Users & Groups
groupadd media
groupadd vpn
useradd --system --shell /usr/sbin/nologin compression
usermod -g media compression
usermod -aG media compression
usermod -aG compression compression

#~Add VPN Credentials
mkdir -p /home/vpn
printf "<Username/Email>\n<Password>" > /home/vpn/credentials

#~Install Plex
#https://www.plex.tv/media-server-downloads/
useradd --system --shell /usr/sbin/nologin plex
usermod -g media plex
usermod -aG media plex
usermod -aG plex plex
usermod -aG docker plex
chown plex:media -R /home/plex
chmod 700 -R /home/plex
systemctl enable /home/plex/plex.service
(cd /etc/systemd/system; systemctl enable plex)

#~Install Sonarr
#https://sonarr.tv/#features
useradd --system --shell /usr/sbin/nologin sonarr
usermod -g media sonarr
usermod -aG media sonarr
usermod -aG sonarr sonarr
usermod -aG docker sonarr
chown sonarr:media -R /home/sonarr
chmod 700 -R /home/sonarr
systemctl enable /home/sonarr/sonarr.service
(cd /etc/systemd/system; systemctl enable sonarr)

#~Install Radarr
#https://radarr.video/
useradd --system --shell /usr/sbin/nologin radarr
usermod -g media radarr
usermod -aG media radarr
usermod -aG radarr radarr
usermod -aG docker radarr
chown radarr:media -R /home/radarr
chmod 700 -R /home/radarr
systemctl enable /home/radarr/radarr.service
(cd /etc/systemd/system; systemctl enable radarr)

#~Install Lidarr
#https://lidarr.audio/
useradd --system --shell /usr/sbin/nologin lidarr
usermod -g media lidarr
usermod -aG media lidarr
usermod -aG lidarr lidarr
usermod -aG docker lidarr
chown lidarr:media -R /home/lidarr
chmod 700 -R /home/lidarr
systemctl enable /home/lidarr/lidarr.service
(cd /etc/systemd/system; systemctl enable lidarr)

#~Install Bazaar
#https://www.bazarr.media/
useradd --system --shell /usr/sbin/nologin bazarr
usermod -g media bazarr
usermod -aG media bazarr
usermod -aG bazarr bazarr
usermod -aG docker bazarr
chown bazarr:media -R /home/bazarr
chmod 700 -R /home/bazarr
systemctl enable /home/bazarr/bazarr.service
(cd /etc/systemd/system; systemctl enable bazarr)

#~Install OMBI
#https://ombi.io/
useradd --system --shell /usr/sbin/nologin ombi
usermod -g media ombi
usermod -aG media ombi
usermod -aG ombi ombi
usermod -aG docker ombi
chown ombi:media -R /home/ombi
chmod 700 -R /home/ombi
systemctl enable /home/ombi/ombi.service
(cd /etc/systemd/system; systemctl enable ombi)

#~Install Jackett
#https://github.com/Jackett/Jackett
useradd --system --shell /usr/sbin/nologin jackett
usermod -g media jackett
usermod -aG media jackett
usermod -aG jackett jackett
usermod -aG docker jackett
usermod -aG vpn jackett
chown jackett:media -R /home/jackett
chmod 700 -R /home/jackett
(cd /home/jackett/dockerfiles; docker build -f jackett-pia.Dockerfile -t jackett .)
systemctl enable /home/jackett/jackett.service
(cd /etc/systemd/system; systemctl enable jackett)

#~Install flaresolverr
#hhttps://github.com/FlareSolverr/FlareSolverr
useradd --system --shell /usr/sbin/nologin flaresolverr
usermod -g media flaresolverr
usermod -aG media flaresolverr
usermod -aG flaresolverr flaresolverr
usermod -aG docker flaresolverr
chown flaresolverr:media -R /home/flaresolverr
chmod 700 -R /home/flaresolverr
systemctl enable /home/flaresolverr/flaresolverr.service
(cd /etc/systemd/system; systemctl enable flaresolverr)

#~Install Transmission
#https://transmissionbt.com/
useradd --system --shell /usr/sbin/nologin transmission
usermod -g media transmission
usermod -aG media transmission
usermod -aG transmission transmission
usermod -aG docker transmission
usermod -aG vpn transmission
chown transmission:media -R /home/transmission
chmod 775 -R /home/transmission
(cd /home/transmission/dockerfiles; docker build -f transmission-pia.Dockerfile -t transmission .)
systemctl enable /home/transmission/transmission.service
(cd /etc/systemd/system; systemctl enable transmission)

#~Install Nzbget
#https://nzbget.net/
useradd --system --shell /usr/sbin/nologin nzbget
usermod -g media nzbget
usermod -aG media nzbget
usermod -aG nzbget nzbget
usermod -aG docker nzbget
usermod -aG vpn nzbget
chown nzbget:media -R /home/nzbget
chmod 775 -R /home/nzbget
(cd /home/nzbget/dockerfiles; docker build -f nzbget-pia.Dockerfile -t nzbget .)
systemctl enable /home/nzbget/nzbget.service
(cd /etc/systemd/system; systemctl enable nzbget)

#~Initialize Docker For Quicker Setup
## Stopping all Processes
systemctl stop ombi
systemctl stop radarr
systemctl stop sonarr
systemctl stop lidarr
systemctl stop jackett
systemctl stop flaresolverr
systemctl stop plex
systemctl stop transmission
ombi stop
radarr stop
sonarr stop
lidarr stop
jackett stop
flaresolverr stop
plex stop
transmission stop

## Removing Current Images
docker rm $(docker ps --all --quiet --no-trunc)
docker rmi $(docker images --all --quiet --no-trunc)
docker volume prune --all
docker system prune --all

## Caching Latest Images
docker pull ubuntu:latest
docker pull ghcr.io/linuxserver/radarr:arm64v8-latest
docker pull ghcr.io/linuxserver/sonarr:arm64v8-latest
docker pull ghcr.io/linuxserver/lidarr:arm64v8-latest
docker pull ghcr.io/linuxserver/plex:arm64v8-latest
docker pull ghcr.io/linuxserver/ombi:arm64v8-latest
docker pull ghcr.io/flaresolverr/flaresolverr:latest
(cd /home/jackett/dockerfiles; docker build -f jackett-pia.Dockerfile -t jackett .)
(cd /home/transmission/dockerfiles; docker build -f transmission-pia.Dockerfile -t transmission .)
docker rm $(docker ps --all --filter "status=exited" --quiet --no-trunc)
docker rmi $(docker images --all --filter "dangling=true" --quiet --no-trunc)

## Starting all Processes
systemctl start transmission
systemctl start plex
systemctl start flaresolverr
systemctl start jackett
systemctl start radarr
systemctl start sonarr
systemctl start lidarr
systemctl start ombi